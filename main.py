import os
import subprocess
import telebot
from telebot import types
import requests
from audio import AudioProccessor
import config

bot = telebot.TeleBot(config.tg_token)

@bot.message_handler(commands=['start', 'help'])
def send_info(message):
    user = message.from_user
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("/start")
    btn2 = types.KeyboardButton("/help")
    markup.add(btn1, btn2)
    if message.text == "/start":
        bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}. –Ø –ë–∏–±–∞",
                     reply_markup=markup)
    if message.text == "/help":
        bot.send_message(message.chat.id,
                     "–°–∞–º —Å–µ–±–µ –ø–æ–º–æ–≥–∏",
                     reply_markup=markup)


def convert_to_wav(input_ogg, output_wav):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç OGG (Opus) –≤ WAV (PCM 16-bit)"""
    command = [
        "ffmpeg", "-y", "-i", input_ogg,
        "-acodec", "pcm_s16le", "-ac", "1", "-ar", "16000", output_wav
    ]
    result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {result.stderr.decode()}")

@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        file_id = message.voice.file_id
        file_info = bot.get_file(file_id)

        # –°–∫–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (OGG)
        ogg_path = "audio.ogg"
        wav_path = "audio.wav"

        file = bot.download_file(file_info.file_path)
        with open(ogg_path, 'wb') as new_file:
            new_file.write(file)

        bot.send_message(message.chat.id, "üéô –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")

        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ WAV
        convert_to_wav(ogg_path, wav_path)

        # –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–∞
        answer = AudioProccessor.transcription(wav_path)

        bot.send_message(message.chat.id, f"üó£ {answer}", parse_mode='Markdown')

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        os.remove(ogg_path)
        os.remove(wav_path)

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö† –û—à–∏–±–∫–∞: {str(e)}")

bot.polling(none_stop=True, interval=0)
